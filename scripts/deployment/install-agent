#!/bin/bash
#

function GREEN {
	local COLOR='\033[0;32m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function BLUE {
	local COLOR='\033[1;34m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function GRAY {
	local COLOR='\033[1;90m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function PURPLE {
	local COLOR='\033[0;35m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function YELLOW {
	local COLOR='\033[0;33m'
	local NC='\033[0m'
	echo "${COLOR}$@${NC}"
}

function TIMESTAMP {
	date '+%m/%d %H:%M:%S' 2>&1
}

function INFO {
	echo -e "$(GRAY $(TIMESTAMP)) $(BLUE ${SCRIPT_NAME}) MSG: $@${LOG_LINE_END}"
}

function initiate_os_variables {
	export OS_KERNEL=$(uname -s | tr "[A-Z]" "[a-z]")
	[ "darwin" == "${OS_KERNEL}" ] && export OS_DIST_NAME="macosx" || export OS_DIST_NAME=$(lsb_release -a 2>/dev/null | grep "^Distributor" | awk '{print $3}' | tr "[A-Z]" "[a-z]")
	[ "darwin" == "${OS_KERNEL}" ] && export OS_DIST_CODENAME="" || export OS_DIST_CODENAME=$(lsb_release -a 2>/dev/null | grep "^Codename" | awk '{print $2}' | tr "[A-Z]" "[a-z]")
	[ "darwin" == "${OS_KERNEL}" ] && export HW_CPUS=$(sysctl -n hw.physicalcpu_max) || export HW_CPUS=$(nproc)
	export OS_ARCH=$(uname -m | tr "[A-Z]" "[a-z]")
	export OS_NAME="${OS_KERNEL}-${OS_DIST_NAME}-${OS_DIST_CODENAME}"
	[ "" == "${OS_DIST_CODENAME}" ] && export OS_NAME="${OS_KERNEL}-${OS_DIST_NAME}"
	INFO "OS_NAME = $(YELLOW ${OS_NAME})"
	INFO "OS_ARCH = $(PURPLE ${OS_ARCH})"
}

function initiate_settings {
	export APP="wstty-agent"
	[ "" == "${RDS_AGENT_TOKEN}" ] && INFO "please specify RDS_AGENT_TOKEN environment variable" && exit 1
	[ "" == "${RELEASE_SERVER}" ] && export RELEASE_SERVER="https://archives.t2t.io/tic-tac-toe/apps"
	[ "" == "${INSTALLATION_TYPE}" ] && export INSTALLATION_TYPE="oneshot"
	[ "" == "${HOME}" ] && export USERHOME="/tmp" || export USERHOME=${HOME}
	case "${OS_NAME}" in
		darwin-macosx)
			export INSTALL_PATH="${USERHOME}/.tictactoe/${APP}"
			;;
		linux-ubuntu-trusty|linux-ubuntu-bionic|linux-raspbian-stretch)
			if [ "oneshot" == "${INSTALLATION_TYPE}" ]; then
				export INSTALL_PATH="${USERHOME}/.tictactoe/${APP}"
			else
				export INSTALL_PATH="/opt/tictactoe/${APP}"
			fi
			;;
		*)
			INFO "unsupported os: ${OS_NAME}, please report to yagamy@t2t.io to improve installation script"
			exit 0
			;;
	esac
}

function oneshot_install_and_run {
	local TMPFILE=$(mktemp /tmp/XXXXXX)
	local URL="${RELEASE_SERVER}/${APP}/current/${OS_NAME}/${OS_ARCH}/bundle.tgz"
	local DIR="${INSTALL_PATH}/oneshot/$(date '+%Y%m%d%H%M%S')"

	INFO "downloading from $(GREEN ${URL}) ..."
	wget -O ${TMPFILE} ${URL}
	[ "0" != "$?" ] && INFO "failed to download, stop installation" && exit 1

	INFO "extracting app bundle ..."
	mkdir -p ${DIR}
	tar xf ${TMPFILE} -C ${DIR}
	[ "0" != "$?" ] && INFO "failed to extract, stop installation" && exit 1

	local CURRENT=$(pwd)
	cd ${DIR}
	local APP_DIR=$(pwd)
	cd ${CURRENT}

	local LAUNCH_SCRIPT="TOE_APP_CONTEXT_EXTRAS=rds:${RDS_AGENT_TOKEN} TOE_APP_TTT_ENV_PREFIX=RDS RDS_PROFILE=rds ${APP_DIR}/runtime/node ${APP_DIR}/index.js -c production"
	INFO "run following script to start agent ..."
	echo ""
	echo -e "  $(YELLOW ${LAUNCH_SCRIPT})"
	echo -e "\n\n\n"

	${BASH} -c "${LAUNCH_SCRIPT}"
}

function install_and_run {
	case "${INSTALLATION_TYPE}" in
		oneshot)
			${INSTALLATION_TYPE}_install_and_run $@
			;;
		*)
			INFO "unsupported installation type: ${INSTALLATION_TYPE}. please report to yagamy@t2t.io to improve installation script"
			;;
	esac
}

initiate_os_variables
initiate_settings
install_and_run $@
